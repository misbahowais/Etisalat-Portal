// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Plugins.DataStore.SQL;

#nullable disable

namespace Plugins.DataStore.SQL.Migrations
{
    [DbContext(typeof(PortalContext))]
    [Migration("20230321095800_package")]
    partial class package
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CoreBusiness.Masters.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("CoreBusiness.Models.Availability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAr")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Availability", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAr")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("City", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Crnumber")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("CRNumber");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Descriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("EstablishmentYear")
                        .HasColumnType("int");

                    b.Property<int>("IndustryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("NameAr")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IndustryId");

                    b.HasIndex("LocationId");

                    b.ToTable("Company", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.CompanyJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Experieance")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("FunctinalAreaId")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobLocationId")
                        .HasColumnType("int");

                    b.Property<string>("JobTitle")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("JobTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("JobViews")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NationalityId")
                        .HasColumnType("int");

                    b.Property<int?>("TotalNoOfVacancy")
                        .HasColumnType("int");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("FunctinalAreaId");

                    b.HasIndex("JobLocationId");

                    b.HasIndex("JobTypeId");

                    b.HasIndex("NationalityId");

                    b.ToTable("CompanyJob", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.CompanyPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FromDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PackageId")
                        .HasMaxLength(250)
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("CompanyPackage", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.CompanyUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailId")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FullName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MobileNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("CompanyUser", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreationUserName")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<string>("Currency")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<string>("NameAr")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Country", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAr")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAr")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Currency", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.FunctionalArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAr")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FunctionalArea", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.Industry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAr")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Industry", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.JobKeyword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("JobKeyword", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.JobQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("JobQuestion", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.JobSeeker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CoverLetterPath")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CurrentCity")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Cvheadline")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)")
                        .HasColumnName("CVHeadline");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Eamil")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FullNameAr")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FullNameEn")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProfilePicturePath")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ResumePath")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("JobSeeker", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.JobSeekerAppliedJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<int>("JobSeekerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobSeekerId");

                    b.ToTable("JobSeekerAppliedJob", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.JobSeekerEducationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("InstituteLocationId")
                        .HasColumnType("int");

                    b.Property<string>("InstituteName")
                        .IsRequired()
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("JobSeekerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PassingYear")
                        .HasColumnType("int");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("InstituteLocationId");

                    b.HasIndex("JobSeekerId");

                    b.ToTable("JobSeekerEducationDetail", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.JobSeekerEmployementDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyLocation")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FromMonth")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FromYear")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCurrentCompany")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobProfile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobSeekerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ToMonth")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ToYear")
                        .HasColumnType("int");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobSeekerId");

                    b.ToTable("JobSeekerEmployementDetail", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.JobSeekerKeySkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobSeekerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("JobSeekerId");

                    b.ToTable("JobSeekerKeySkill", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.JobSeekerPersonalDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AlternateCountryCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("AlternateEmailId")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("AlternateMobile")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("CurrentCityId")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("DOB");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDrivingLicense")
                        .HasColumnType("bit");

                    b.Property<int>("IssuingCountryId")
                        .HasColumnType("int");

                    b.Property<int>("JobSeekerId")
                        .HasColumnType("int");

                    b.Property<string>("LanguagesKnown")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MaritalStatusId")
                        .HasColumnType("int");

                    b.Property<int>("NationalityId")
                        .HasColumnType("int");

                    b.Property<int>("ReligionId")
                        .HasColumnType("int");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VisaStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrentCityId");

                    b.HasIndex("IssuingCountryId");

                    b.HasIndex("JobSeekerId");

                    b.HasIndex("MaritalStatusId");

                    b.HasIndex("NationalityId");

                    b.HasIndex("ReligionId");

                    b.HasIndex("VisaStatusId");

                    b.ToTable("JobSeekerPersonalDetail", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.JobSeekerProfessionalDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AvailabilityToJoinId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("FunctionalAreaId")
                        .HasColumnType("int");

                    b.Property<int>("IndustryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("JobSeekerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("MonthlySalary")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("TotalWorkExperienceMonth")
                        .HasColumnType("int");

                    b.Property<int>("TotalWorkExperienceYear")
                        .HasColumnType("int");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkLevelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityToJoinId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("FunctionalAreaId");

                    b.HasIndex("IndustryId");

                    b.HasIndex("JobSeekerId");

                    b.HasIndex("WorkLevelId");

                    b.ToTable("JobSeekerProfessionalDetail", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.JobSeekerProfileSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("JobSeekerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobSeekerId");

                    b.ToTable("JobSeekerProfileSummary", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.JobSeekerSavedJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<int>("JobSeekerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobSeekerId");

                    b.ToTable("JobSeekerSavedJob", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.JobSeekerSkillsCertification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("ExperienceMonth")
                        .HasColumnType("int");

                    b.Property<int>("ExperienceYear")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("JobSeekerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LastUsed")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobSeekerId");

                    b.ToTable("JobSeekerSkillsCertification", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.JobType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAr")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobType", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.MaritalStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MaritalStatus", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.Nationality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAr")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Nationality", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(750)
                        .HasColumnType("nvarchar(750)");

                    b.Property<string>("FeatureList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Package", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.QuestionsAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("JobSeekerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionsAnswer", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.Religion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAr")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Religion", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.VisaStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAr")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VisaStatus", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.WorkLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAr")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkLevel", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.WorkplaceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(dateadd(hour,(3),getutcdate()))");

                    b.Property<string>("CreationUserName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAr")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("UserDefined1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDefined4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkplaceType", (string)null);
                });

            modelBuilder.Entity("CoreBusiness.Models.City", b =>
                {
                    b.HasOne("CoreBusiness.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FK_City_Country");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("CoreBusiness.Models.Company", b =>
                {
                    b.HasOne("CoreBusiness.Models.Industry", "Industry")
                        .WithMany("Companies")
                        .HasForeignKey("IndustryId")
                        .IsRequired()
                        .HasConstraintName("FK_Company_Industry");

                    b.HasOne("CoreBusiness.Models.City", "Location")
                        .WithMany("Companies")
                        .HasForeignKey("LocationId")
                        .IsRequired()
                        .HasConstraintName("FK_Company_City");

                    b.Navigation("Industry");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("CoreBusiness.Models.CompanyJob", b =>
                {
                    b.HasOne("CoreBusiness.Models.Company", "Company")
                        .WithMany("CompanyJobs")
                        .HasForeignKey("CompanyId")
                        .IsRequired()
                        .HasConstraintName("FK_CompanyJob_Company");

                    b.HasOne("CoreBusiness.Models.FunctionalArea", "FunctinalArea")
                        .WithMany("CompanyJobs")
                        .HasForeignKey("FunctinalAreaId")
                        .IsRequired()
                        .HasConstraintName("FK_CompanyJob_FunctionalArea");

                    b.HasOne("CoreBusiness.Models.City", "JobLocation")
                        .WithMany("CompanyJobs")
                        .HasForeignKey("JobLocationId")
                        .IsRequired()
                        .HasConstraintName("FK_CompanyJob_City");

                    b.HasOne("CoreBusiness.Models.JobType", "JobType")
                        .WithMany("CompanyJobs")
                        .HasForeignKey("JobTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_CompanyJob_JobType");

                    b.HasOne("CoreBusiness.Models.Nationality", "Nationality")
                        .WithMany("CompanyJobs")
                        .HasForeignKey("NationalityId")
                        .IsRequired()
                        .HasConstraintName("FK_CompanyJob_Nationality");

                    b.Navigation("Company");

                    b.Navigation("FunctinalArea");

                    b.Navigation("JobLocation");

                    b.Navigation("JobType");

                    b.Navigation("Nationality");
                });

            modelBuilder.Entity("CoreBusiness.Models.CompanyPackage", b =>
                {
                    b.HasOne("CoreBusiness.Models.Company", "Company")
                        .WithMany("CompanyPackages")
                        .HasForeignKey("CompanyId")
                        .IsRequired()
                        .HasConstraintName("FK_CompanyPackage_Company");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("CoreBusiness.Models.CompanyUser", b =>
                {
                    b.HasOne("CoreBusiness.Models.Company", "Company")
                        .WithMany("CompanyUsers")
                        .HasForeignKey("CompanyId")
                        .IsRequired()
                        .HasConstraintName("FK_CompanyUser_Company");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("CoreBusiness.Models.JobKeyword", b =>
                {
                    b.HasOne("CoreBusiness.Models.CompanyJob", "Job")
                        .WithMany("JobKeywords")
                        .HasForeignKey("JobId")
                        .IsRequired()
                        .HasConstraintName("FK_JobKeyword_CompanyJob");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("CoreBusiness.Models.JobQuestion", b =>
                {
                    b.HasOne("CoreBusiness.Models.CompanyJob", "Job")
                        .WithMany("JobQuestions")
                        .HasForeignKey("JobId")
                        .IsRequired()
                        .HasConstraintName("FK_JobQuestion_CompanyJob");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("CoreBusiness.Models.JobSeekerAppliedJob", b =>
                {
                    b.HasOne("CoreBusiness.Models.JobSeeker", "JobSeeker")
                        .WithMany("JobSeekerAppliedJobs")
                        .HasForeignKey("JobSeekerId")
                        .IsRequired()
                        .HasConstraintName("FK_JobSeekerAppliedJob_JobSeeker");

                    b.Navigation("JobSeeker");
                });

            modelBuilder.Entity("CoreBusiness.Models.JobSeekerEducationDetail", b =>
                {
                    b.HasOne("CoreBusiness.Models.Course", "Course")
                        .WithMany("JobSeekerEducationDetails")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK_JobSeekerEducationDetail_Course");

                    b.HasOne("CoreBusiness.Models.Country", "InstituteLocation")
                        .WithMany("JobSeekerEducationDetails")
                        .HasForeignKey("InstituteLocationId")
                        .IsRequired()
                        .HasConstraintName("FK_JobSeekerEducationDetail_Country");

                    b.HasOne("CoreBusiness.Models.JobSeeker", "JobSeeker")
                        .WithMany("JobSeekerEducationDetails")
                        .HasForeignKey("JobSeekerId")
                        .IsRequired()
                        .HasConstraintName("FK_JobSeekerEducationDetail_JobSeeker");

                    b.Navigation("Course");

                    b.Navigation("InstituteLocation");

                    b.Navigation("JobSeeker");
                });

            modelBuilder.Entity("CoreBusiness.Models.JobSeekerEmployementDetail", b =>
                {
                    b.HasOne("CoreBusiness.Models.JobSeeker", "JobSeeker")
                        .WithMany("JobSeekerEmployementDetails")
                        .HasForeignKey("JobSeekerId")
                        .IsRequired()
                        .HasConstraintName("FK_JobSeekerEmployementDetail_JobSeeker");

                    b.Navigation("JobSeeker");
                });

            modelBuilder.Entity("CoreBusiness.Models.JobSeekerKeySkill", b =>
                {
                    b.HasOne("CoreBusiness.Models.JobSeeker", "JobSeeker")
                        .WithMany("JobSeekerKeySkills")
                        .HasForeignKey("JobSeekerId")
                        .IsRequired()
                        .HasConstraintName("FK_JobSeekerKeySkill_JobSeeker");

                    b.Navigation("JobSeeker");
                });

            modelBuilder.Entity("CoreBusiness.Models.JobSeekerPersonalDetail", b =>
                {
                    b.HasOne("CoreBusiness.Models.City", "CurrentCity")
                        .WithMany("JobSeekerPersonalDetails")
                        .HasForeignKey("CurrentCityId")
                        .IsRequired()
                        .HasConstraintName("FK_JobSeekerPersonalDetail_City");

                    b.HasOne("CoreBusiness.Models.Country", "IssuingCountry")
                        .WithMany("JobSeekerPersonalDetails")
                        .HasForeignKey("IssuingCountryId")
                        .IsRequired()
                        .HasConstraintName("FK_JobSeekerPersonalDetail_Country");

                    b.HasOne("CoreBusiness.Models.JobSeeker", "JobSeeker")
                        .WithMany("JobSeekerPersonalDetails")
                        .HasForeignKey("JobSeekerId")
                        .IsRequired()
                        .HasConstraintName("FK_JobSeekerPersonalDetail_JobSeeker");

                    b.HasOne("CoreBusiness.Models.MaritalStatus", "MaritalStatus")
                        .WithMany("JobSeekerPersonalDetails")
                        .HasForeignKey("MaritalStatusId")
                        .IsRequired()
                        .HasConstraintName("FK_JobSeekerPersonalDetail_MaritalStatus");

                    b.HasOne("CoreBusiness.Models.Nationality", "Nationality")
                        .WithMany("JobSeekerPersonalDetails")
                        .HasForeignKey("NationalityId")
                        .IsRequired()
                        .HasConstraintName("FK_JobSeekerPersonalDetail_Nationality");

                    b.HasOne("CoreBusiness.Models.Religion", "Religion")
                        .WithMany("JobSeekerPersonalDetails")
                        .HasForeignKey("ReligionId")
                        .IsRequired()
                        .HasConstraintName("FK_JobSeekerPersonalDetail_Religion");

                    b.HasOne("CoreBusiness.Models.VisaStatus", "VisaStatus")
                        .WithMany("JobSeekerPersonalDetails")
                        .HasForeignKey("VisaStatusId")
                        .IsRequired()
                        .HasConstraintName("FK_JobSeekerPersonalDetail_VisaStatus");

                    b.Navigation("CurrentCity");

                    b.Navigation("IssuingCountry");

                    b.Navigation("JobSeeker");

                    b.Navigation("MaritalStatus");

                    b.Navigation("Nationality");

                    b.Navigation("Religion");

                    b.Navigation("VisaStatus");
                });

            modelBuilder.Entity("CoreBusiness.Models.JobSeekerProfessionalDetail", b =>
                {
                    b.HasOne("CoreBusiness.Models.Availability", "AvailabilityToJoin")
                        .WithMany("JobSeekerProfessionalDetails")
                        .HasForeignKey("AvailabilityToJoinId")
                        .IsRequired()
                        .HasConstraintName("FK_JobSeekerProfessionalDetail_Availability");

                    b.HasOne("CoreBusiness.Models.Currency", "Currency")
                        .WithMany("JobSeekerProfessionalDetails")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_JobSeekerProfessionalDetail_Currency");

                    b.HasOne("CoreBusiness.Models.FunctionalArea", "FunctionalArea")
                        .WithMany("JobSeekerProfessionalDetails")
                        .HasForeignKey("FunctionalAreaId")
                        .IsRequired()
                        .HasConstraintName("FK_JobSeekerProfessionalDetail_FunctionalArea");

                    b.HasOne("CoreBusiness.Models.Industry", "Industry")
                        .WithMany("JobSeekerProfessionalDetails")
                        .HasForeignKey("IndustryId")
                        .IsRequired()
                        .HasConstraintName("FK_JobSeekerProfessionalDetail_Industry");

                    b.HasOne("CoreBusiness.Models.JobSeeker", "JobSeeker")
                        .WithMany("JobSeekerProfessionalDetails")
                        .HasForeignKey("JobSeekerId")
                        .IsRequired()
                        .HasConstraintName("FK_JobSeekerProfessionalDetail_JobSeeker");

                    b.HasOne("CoreBusiness.Models.WorkLevel", "WorkLevel")
                        .WithMany("JobSeekerProfessionalDetails")
                        .HasForeignKey("WorkLevelId")
                        .IsRequired()
                        .HasConstraintName("FK_JobSeekerProfessionalDetail_WorkLevel");

                    b.Navigation("AvailabilityToJoin");

                    b.Navigation("Currency");

                    b.Navigation("FunctionalArea");

                    b.Navigation("Industry");

                    b.Navigation("JobSeeker");

                    b.Navigation("WorkLevel");
                });

            modelBuilder.Entity("CoreBusiness.Models.JobSeekerProfileSummary", b =>
                {
                    b.HasOne("CoreBusiness.Models.JobSeeker", "JobSeeker")
                        .WithMany("JobSeekerProfileSummaries")
                        .HasForeignKey("JobSeekerId")
                        .IsRequired()
                        .HasConstraintName("FK_JobSeekerProfileSummary_JobSeeker");

                    b.Navigation("JobSeeker");
                });

            modelBuilder.Entity("CoreBusiness.Models.JobSeekerSavedJob", b =>
                {
                    b.HasOne("CoreBusiness.Models.JobSeeker", "JobSeeker")
                        .WithMany("JobSeekerSavedJobs")
                        .HasForeignKey("JobSeekerId")
                        .IsRequired()
                        .HasConstraintName("FK_JobSeekerSavedJob_JobSeeker");

                    b.Navigation("JobSeeker");
                });

            modelBuilder.Entity("CoreBusiness.Models.JobSeekerSkillsCertification", b =>
                {
                    b.HasOne("CoreBusiness.Models.JobSeeker", "JobSeeker")
                        .WithMany("JobSeekerSkillsCertifications")
                        .HasForeignKey("JobSeekerId")
                        .IsRequired()
                        .HasConstraintName("FK_JobSeekerSkillsCertification_JobSeeker");

                    b.Navigation("JobSeeker");
                });

            modelBuilder.Entity("CoreBusiness.Models.QuestionsAnswer", b =>
                {
                    b.HasOne("CoreBusiness.Models.JobQuestion", "Question")
                        .WithMany("QuestionsAnswers")
                        .HasForeignKey("QuestionId")
                        .IsRequired()
                        .HasConstraintName("FK_QuestionsAnswer_JobQuestion");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("CoreBusiness.Models.Availability", b =>
                {
                    b.Navigation("JobSeekerProfessionalDetails");
                });

            modelBuilder.Entity("CoreBusiness.Models.City", b =>
                {
                    b.Navigation("Companies");

                    b.Navigation("CompanyJobs");

                    b.Navigation("JobSeekerPersonalDetails");
                });

            modelBuilder.Entity("CoreBusiness.Models.Company", b =>
                {
                    b.Navigation("CompanyJobs");

                    b.Navigation("CompanyPackages");

                    b.Navigation("CompanyUsers");
                });

            modelBuilder.Entity("CoreBusiness.Models.CompanyJob", b =>
                {
                    b.Navigation("JobKeywords");

                    b.Navigation("JobQuestions");
                });

            modelBuilder.Entity("CoreBusiness.Models.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("JobSeekerEducationDetails");

                    b.Navigation("JobSeekerPersonalDetails");
                });

            modelBuilder.Entity("CoreBusiness.Models.Course", b =>
                {
                    b.Navigation("JobSeekerEducationDetails");
                });

            modelBuilder.Entity("CoreBusiness.Models.Currency", b =>
                {
                    b.Navigation("JobSeekerProfessionalDetails");
                });

            modelBuilder.Entity("CoreBusiness.Models.FunctionalArea", b =>
                {
                    b.Navigation("CompanyJobs");

                    b.Navigation("JobSeekerProfessionalDetails");
                });

            modelBuilder.Entity("CoreBusiness.Models.Industry", b =>
                {
                    b.Navigation("Companies");

                    b.Navigation("JobSeekerProfessionalDetails");
                });

            modelBuilder.Entity("CoreBusiness.Models.JobQuestion", b =>
                {
                    b.Navigation("QuestionsAnswers");
                });

            modelBuilder.Entity("CoreBusiness.Models.JobSeeker", b =>
                {
                    b.Navigation("JobSeekerAppliedJobs");

                    b.Navigation("JobSeekerEducationDetails");

                    b.Navigation("JobSeekerEmployementDetails");

                    b.Navigation("JobSeekerKeySkills");

                    b.Navigation("JobSeekerPersonalDetails");

                    b.Navigation("JobSeekerProfessionalDetails");

                    b.Navigation("JobSeekerProfileSummaries");

                    b.Navigation("JobSeekerSavedJobs");

                    b.Navigation("JobSeekerSkillsCertifications");
                });

            modelBuilder.Entity("CoreBusiness.Models.JobType", b =>
                {
                    b.Navigation("CompanyJobs");
                });

            modelBuilder.Entity("CoreBusiness.Models.MaritalStatus", b =>
                {
                    b.Navigation("JobSeekerPersonalDetails");
                });

            modelBuilder.Entity("CoreBusiness.Models.Nationality", b =>
                {
                    b.Navigation("CompanyJobs");

                    b.Navigation("JobSeekerPersonalDetails");
                });

            modelBuilder.Entity("CoreBusiness.Models.Religion", b =>
                {
                    b.Navigation("JobSeekerPersonalDetails");
                });

            modelBuilder.Entity("CoreBusiness.Models.VisaStatus", b =>
                {
                    b.Navigation("JobSeekerPersonalDetails");
                });

            modelBuilder.Entity("CoreBusiness.Models.WorkLevel", b =>
                {
                    b.Navigation("JobSeekerProfessionalDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
