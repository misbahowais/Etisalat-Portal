@page "/"
@inject IUserDataRepository userData;
@inject NavigationManager NavigationManager;

<h3>User Data</h3>
@if (allUser != null)
{

    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                @*<th>Company Name</th>*@
                <th>Phone Number</th>
                <th>Email</th>
                <th>Capsule Name</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in allUser)
            {
                <tr>
                    <td>@item.Name</td>
                    @*<td>@item.Company.NameEn</td>*@
                    <td>@item.PhoneNumber</td>
                    <td>@item.Email</td>
                    <td>@item.CapsuleName</td>
                    <td>
                        <button type="button" @onclick="@(() => Edit(item))" class="btn btn-link">Edit</button>
                        <button type="button" @onclick="@(() => Delete(item))" class="btn btn-link">Delete</button>

                    </td>
                </tr>
            }
        </tbody>
    </table>
 }
<br />
@*<div class="position-relative overflow-hidden p-3 p-md-5 m-md-3 text-center bg-light">
    <div class="col-md-5 p-lg-5 mx-auto my-5">
        <h1 class="display-4 fw-normal">MahadJobs Admin Console</h1>

    </div>
    <div class="product-device shadow-sm d-none d-md-block"></div>
    <div class="product-device product-device-2 shadow-sm d-none d-md-block"></div>
</div>*@

@code {
    private IEnumerable<UserData> allUser;


    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadList();

    }


    private void LoadList()
    {
        allUser = userData.GetAll();
    }

    private void Edit(UserData model)
    {
        NavigationManager.NavigateTo($"/edit/{model.Id}");
    }

    private void Add()
    {
        NavigationManager.NavigateTo($"/add");
    }

    private void Delete(UserData model)
    {
        userData.Delete(model.Id);
        LoadList();
    }
  

}