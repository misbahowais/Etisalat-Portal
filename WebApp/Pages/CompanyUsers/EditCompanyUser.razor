@page "/edit-company-user/{CompId}/{Id}"
@attribute [Authorize]
@inject NavigationManager NavigationManager
@inject IGenericRepository<CompanyUser> repository;
@inject IGenericRepository<Industry> industry;
@inject IGenericRepository<Country> country;
@inject IGenericRepository<City> jobLocation;
@inject IJobRepository job;
@inject IToastService toastService

<h3>Edit Company User</h3>

@if (companyUser != null)
{
    <EditForm Model="companyUser" OnValidSubmit="OnValidSumit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="jobtit">Full Name</label>
            <InputText id="jobtit" @bind-Value="companyUser.FullName" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="jobdesc">Email</label>
            <InputText id="jobdesc" @bind-Value="companyUser.EmailId" class="form-control" contenteditable="false"></InputText>
        </div>
        <div class="form-group">
            <label for="exp">Mobile Num</label>
            <InputText id="exp" @bind-Value="companyUser.MobileNo" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="fun">Role</label>
            <InputSelect id="fun" @bind-Value="companyUser.Role" class="form-control">
                <option value="admin">Admin</option>
                <option value="user">User</option>
            </InputSelect>
        </div>
        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-primary" @onclick="OnCancel">Cancel</button>
        <button class="btn btn-info" @onclick="@(() => toastService.ShowInfo("I'm an INFO message"))">Info Toast</button>
    </EditForm>

}


@code {
    [Parameter]
    public string Id { get; set; }
    [Parameter]
    public string CompId { get; set; }
    private CompanyUser companyUser;


    protected override void OnInitialized()
    {
        base.OnInitialized();

        companyUser = new CompanyUser();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if (int.TryParse(this.Id, out int iId))
        {
            var val = repository.GetById(iId);
            this.companyUser = val;
        }
    }


    private void OnValidSumit()
    {
        var result = repository.Update(companyUser);

        if (result.IsSuccess)
        {
            toastService.ShowSuccess(result.Message);
            NavigationManager.NavigateTo($"/company-user/{CompId}");
        }
        else
        {
            toastService.ShowError(result.Message);
        }
    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo($"/company-user/{CompId}");
    }
}
